# Generated by Django 5.2.5 on 2025-09-01 07:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ScrapingJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('courses_found', models.PositiveIntegerField(default=0)),
                ('courses_updated', models.PositiveIntegerField(default=0)),
                ('courses_created', models.PositiveIntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('log_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scraping_jobs', to='courses.university')),
            ],
            options={
                'db_table': 'scraping_jobs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScrapedData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_url', models.URLField()),
                ('raw_data', models.JSONField()),
                ('processed', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.course')),
                ('scraping_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scraped_data', to='scraper.scrapingjob')),
            ],
            options={
                'db_table': 'scraped_data',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScrapingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_url', models.URLField()),
                ('course_list_selector', models.TextField(help_text='CSS selector for course list')),
                ('course_title_selector', models.TextField(help_text='CSS selector for course title')),
                ('course_fee_selector', models.TextField(help_text='CSS selector for course fee')),
                ('course_duration_selector', models.TextField(help_text='CSS selector for course duration')),
                ('course_level_selector', models.TextField(blank=True, help_text='CSS selector for course level')),
                ('course_description_selector', models.TextField(blank=True, help_text='CSS selector for course description')),
                ('course_requirements_selector', models.TextField(blank=True, help_text='CSS selector for requirements')),
                ('pagination_selector', models.TextField(blank=True, help_text='CSS selector for pagination')),
                ('wait_time', models.PositiveIntegerField(default=2, help_text='Wait time between requests (seconds)')),
                ('use_selenium', models.BooleanField(default=False, help_text='Use Selenium for JavaScript-heavy sites')),
                ('custom_headers', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('university', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='scraping_rule', to='courses.university')),
            ],
            options={
                'db_table': 'scraping_rules',
            },
        ),
    ]
